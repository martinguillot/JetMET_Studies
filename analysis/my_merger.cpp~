#include <iostream>
#include <vector>
#include <string>

#include "TFile.h"
#include "TTree.h"
#include "TChain.h"
#include "TLorentzVector.h"




int main( int argc, char* argv[] ) {

  if( argc<6 ) {
    std::cout << "Usage: ./jseMergeTrees [version] [dataset1] [dataset2] [targetDirectory] [prodName]" << std::endl;
    exit(1);
  }

  std::string cmsswVersion(argv[1]);
  std::string dataset1(argv[2]);
  std::string dataset2(argv[3]);
  std::string targetDir(argv[4]);
  std::string prodName(argv[5]);

  std::string path("root://cms-xrd-global.cern.ch/");
  //std::string path("/eos/cms/store/user/pandolf/JetStudiesECAL/");


  TChain* chain = new TChain("mt2");

  chain->Add( Form( "%s/%s", path.c_str(), dataset1.c_str()) );
  chain->Add( Form( "%s/%s", path.c_str(), dataset2.c_str()) );

  chain->SetBranchStatus("jet_pt"    , 1);
  chain->SetBranchStatus("jet_eta"   , 1);
  chain->SetBranchStatus("MET_phi"   , 1);
  chain->SetBranchStatus("MET_pt"  , 1);
  chain->SetBranchStatus("MET_sumEt" , 1);

  chain->SetBranchStatus("jet_chHEF" , 1);
  chain->SetBranchStatus("jet_neHEF" , 1);
  chain->SetBranchStatus("jet_phEF"  , 1);

  std::string outdir( Form("%s/multiTrees", targetDir.c_str()) );
  system( Form("mkdir -p %s", outdir.c_str()) );

  std::string outfileName( Form("%s/%s.root", outdir.c_str(), prodName.c_str()));
  TFile* outfile = TFile::Open( outfileName.c_str(), "RECREATE" );
  outfile->cd();

  std::cout << "   Merging..." << std::endl;
  TTree* tree = chain->CloneTree();

  outfile->cd();
  tree->Write();
  outfile->Close();

  
  return 0;

}
